# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Testing Python Application

on:
  push:
    branches: [ "main", "Beta", "Dev" ]
    types: [opened]
  pull_request:
    branches: [ "main", "Beta", "Dev" ]
    types: [opened]
  issue_comment:
    types: [created, edited]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.9.7"
        
    - name: Pull Request Comment Trigger
      uses: khan/pull-request-comment-trigger@master
      id: check
      with:
        trigger: '@deploy'
        reaction: rocket
      env:
        GITHUB_TOKEN: '${{ secrets.ALISTERS_TOKEN }}'
    
    # - name: Pull Request Comment "deploy" Trigger
    #   uses: khan/pull-request-comment-trigger@master
    #   id: execute
    #   with:
    #     trigger: '@deploy_code'
    #     reaction: rocket
    #   env:
    #     GITHUB_TOKEN: '${{ secrets.ALISTERS_TOKEN }}'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      if: steps.check.outputs.triggered == 'true'
              
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      if: steps.check.outputs.triggered == 'true'
        
    - name: Test with pytest
      run: |
        pytest
      if: steps.check.outputs.triggered == 'true'

    - name: Deploying code
      run: print "Deploying Application"  
      if: steps.check.outputs.triggered == 'true'
      # if: steps.execute.outputs.triggered == 'true'


    
        
      
      
      
    
